# Given an array of sorted numbers and a target sum, find a pair in the array whose sum is equal to the given target.

# Write a function to return the indices of the two numbers (i.e. the pair) such that they add up to the given target.

# Example 1:

# Input: [1, 2, 3, 4, 6], target=6 Output: [1, 3] Explanation: The numbers at index 1 and 3 add up to 6: 2+4=6

# Example 2:

# Input: [2, 5, 9, 11], target=11 Output: [0, 2] Explanation: The numbers at index 0 and 2 add up to 11: 2+9=11



'''
idea as the given array is sorted 
so we can do this by comparing sum of last index and first index of array if the sum becomes greater we can take reduce index from last and if the sum is lesser we can increase the index from starting and have to do this till we have the condition of first index equal to last or last index is leser than first index

'''
def Vasitum_sum_target(arr,s):
  first_index = 0
  last_index = len(arr)-1
  result = "No Pair"
  while(first_index<last_index):
    sum_res = arr[first_index]+arr[last_index]
    if(sum_res == s):
      result  =[first_index,last_index]
      break
    else:
      if(sum_res <s):
        first_index = first_index+1
      else:
        last_index = last_index -1
  return result

#first test case ([1,3])
case_1 = Vasitum_sum_target([1, 2, 3, 4, 6],6)
#second test case ([0,2])
case_2 = Vasitum_sum_target([2, 5, 9, 11],11)
#third test case (where sum is not present) (No Pair)
case_3 = Vasitum_sum_target([2, 5, 9, 11],50)

print(case_1)
print(case_2)
print(case_3)
